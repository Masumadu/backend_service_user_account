version: "3.8"
services:
  backend: # user account service
    image: user_account_service:latest
    container_name: "user_account_service"
    environment:
      # app configuration variables
      FASTAPI_CONFIG: ${FASTAPI_CONFIG}
      SECRET_KEY: ${SECRET_KEY}
      # db configuration variables
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      # kafka configuration variables
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_SERVER_USERNAME: ${KAFKA_SERVER_USERNAME}
      KAFKA_SERVER_PASSWORD: ${KAFKA_SERVER_PASSWORD}
      # keycloak configuration variables
      KEYCLOAK_URI: ${KEYCLOAK_URI}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
    command: ./gunicorn_starter.sh
    ports:
      - "8000:8000"
    networks:
      - user_account_service
    depends_on:
      backend_db:
        condition: service_healthy
      keycloak:
        condition: service_started
      kafka:
        condition: service_healthy

  backend_db: # database server for the backend service
    image: postgres:12
    container_name: "postgres_database"
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - $PWD/.ignore_postgres_data:/var/lib/postgresql/data
    ports:
      - "5430:5432"
    networks:
      - user_account_service
    healthcheck:
        test: ["CMD", "pg_isready",  "-U", "${DB_USER}", "-d", "${DB_NAME}"]

  keycloak: # keycloak server for authentication
    container_name: "keycloak_server"
    image: quay.io/keycloak/keycloak:latest
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${DB_USER}
      KC_DB_PASSWORD: ${DB_PASSWORD}
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/${DB_NAME}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8081:8080"
    restart: always
    volumes:
      - ./keycloak_config/realm-export.json:/opt/keycloak/data/import/realm.json
    networks:
      - user_account_service
    depends_on:
      keycloak_db:
        condition: service_healthy

  keycloak_db: # database to use by keycloak
    image: postgres:12
    container_name: "keycloak_db"
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - $PWD/.ignore_keycloak_data:/var/lib/postgresql/data
    ports:
      - "5428:5432"
    networks:
      - user_account_service
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]

  kafka: # kafka server configured with authentication
    image: wurstmeister/kafka
    container_name: "kafka_server"
    ports:
      - "9091:9092"
      - "2182:2181"
    volumes:
      - ./.ignore_kafka_config/kafka_server_jaas.conf:/opt/kafka/config/kafka_server_jaas.conf
      - ./.ignore_kafka_config/kafka_server_properties.properties:/opt/kafka/config/server.properties
      - ./.ignore_kafka_config/config.conf:/opt/kafka/config.conf
    environment:
      KAFKA_OPTS: -Djava.security.auth.login.config=/opt/kafka/config/kafka_server_jaas.conf
    command: "
      bash -c '/opt/kafka/bin/zookeeper-server-start.sh /opt/kafka/config/zookeeper.properties &
      /opt/kafka/bin/kafka-configs.sh --zookeeper localhost:2181 -alter --add-config 'SCRAM-SHA-256=[password=admin-secret],SCRAM-SHA-512=[password=admin-secret]' --entity-type users --entity-name admin &&
      /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties
      '"
    healthcheck:
      test: [ "CMD", "/opt/kafka/bin/kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--command-config", "/opt/kafka/config.conf", "--list" ]
    restart: always
    networks:
      - user_account_service

networks:
  user_account_service:
    name: user_account_network
